{"version":3,"sources":["scripts/main.js"],"names":["boardSize","boardBody","document","querySelector","firstElementChild","score","gameButton","cells","querySelectorAll","ARROW","right","left","up","down","DIRECTIONS","CHANCE","CHANCE_MAX_VALUE","REGULAR_TILE_VALUE","RARE_TILE_VALUE","board","r","c","cell","children","cellNumber","id","toString","updateCell","currentCell","number","innerText","classList","value","add","gameClick","e","forEach","msg","window","addEventListener","start","addNewNumber","removeEventListener","map","mas","el","remove","Object","values","includes","key","slide","merge","row","newRow","clearZeros","i","length","addZeros","getRandom","size","Math","floor","random","findNumber","some","array","element","canMove","found","getElementById","showMessage","type","filter","push","direction","slideHorizontally","slideVertically","reverse"],"mappings":"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","file":"main.ae057d6f.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst boardSize = 4;\n\nconst boardBody = document.querySelector('.game-field').firstElementChild;\nconst score = document.querySelector('.game-score');\nconst gameButton = document.querySelector('.start');\nconst cells = document.querySelectorAll('td');\n\nconst ARROW = {\n  right: 'ArrowRight',\n  left: 'ArrowLeft',\n  up: 'ArrowUp',\n  down: 'ArrowDown',\n};\n\nconst DIRECTIONS = {\n  right: 'right',\n  left: 'left',\n  up: 'up',\n  down: 'down',\n};\n\nconst CHANCE = 1;\nconst CHANCE_MAX_VALUE = 10;\nconst REGULAR_TILE_VALUE = 2;\nconst RARE_TILE_VALUE = 4;\n\nlet board = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nfor (let r = 0; r < boardSize; r++) {\n  for (let c = 0; c < boardSize; c++) {\n    const cell = boardBody.children[r].children[c];\n    const cellNumber = board[r][c];\n\n    cell.id = r.toString() + '-' + c.toString();\n\n    updateCell(cell, cellNumber);\n  }\n}\n\nfunction updateCell(currentCell, number) {\n  currentCell.innerText = '';\n  currentCell.classList.value = 'field-cell';\n\n  if (number > 0) {\n    currentCell.innerText = number;\n    currentCell.classList.add(`field-cell--${number}`);\n  }\n}\n\ngameButton.addEventListener('click', gameClick);\n\nfunction gameClick(e) {\n  const messages = document.querySelectorAll('.message');\n\n  messages.forEach(msg => msg.classList.add('hidden'));\n\n  if (gameButton.innerText === 'Start') {\n    window.addEventListener('keydown', start);\n    addNewNumber();\n    addNewNumber();\n\n    gameButton.removeEventListener('click', gameClick);\n  } else {\n    window.removeEventListener('keydown', start);\n\n    cells.forEach(cell => {\n      cell.innerText = '';\n      cell.classList.value = 'field-cell';\n    });\n\n    board = board.map(mas => mas.map(el => 0));\n    score.innerText = 0;\n    gameButton.classList.value = 'button start';\n    gameButton.innerText = 'Start';\n\n    const messageStart = document.querySelector('.message-start');\n\n    messageStart.classList.remove('hidden');\n  }\n};\n\nfunction start(e) {\n  if (Object.values(ARROW).includes(e.key)) {\n    gameButton.classList.value = 'button restart';\n    gameButton.innerText = 'Restart';\n    gameButton.addEventListener('click', gameClick);\n  }\n\n  switch (e.key) {\n    case ARROW.left:\n      slide(DIRECTIONS.left);\n      break;\n    case ARROW.right:\n      slide(DIRECTIONS.right);\n      break;\n    case ARROW.up:\n      slide(DIRECTIONS.up);\n      break;\n    case ARROW.down:\n      slide(DIRECTIONS.down);\n      break;\n    default:\n      break;\n  }\n}\n\nfunction merge(row) {\n  let newRow = clearZeros(row);\n\n  for (let i = 0; i < newRow.length - 1; i++) {\n    if (newRow[i] === newRow[i + 1]) {\n      newRow[i] *= 2;\n      newRow[i + 1] = 0;\n      score.innerText = +score.innerText + newRow[i];\n    }\n  }\n\n  newRow = clearZeros(newRow);\n  newRow = addZeros(newRow);\n\n  return newRow;\n}\n\nfunction getRandom(size) {\n  return Math.floor(Math.random() * size);\n}\n\nfunction findNumber(number = 0) {\n  return board.some(array => {\n    return array.some(element => element === number);\n  });\n}\n\nfunction canMove() {\n  for (let r = 0; r < boardSize; r++) {\n    for (let c = 0; c < boardSize; c++) {\n      if (r < boardSize - 1 && c < boardSize - 1) {\n        if (board[r][c] === board[r][c + 1]\n          || board[r][c] === board[r + 1][c]) {\n          return true;\n        }\n      }\n\n      if (r === boardSize - 1 && c < boardSize - 1) {\n        if (board[r][c] === board[r][c + 1]) {\n          return true;\n        }\n      }\n\n      if (c === boardSize - 1 && r < boardSize - 1) {\n        if (board[r][c] === board[r + 1][c]) {\n          return true;\n        }\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction addNewNumber() {\n  if (!findNumber()) {\n    return;\n  }\n\n  let found = false;\n\n  while (!found) {\n    const r = getRandom(boardSize);\n    const c = getRandom(boardSize);\n    let random = getRandom(CHANCE_MAX_VALUE);\n\n    random = random > CHANCE ? REGULAR_TILE_VALUE : RARE_TILE_VALUE;\n\n    if (board[r][c] === 0) {\n      const cell = document.getElementById(r.toString() + '-' + c.toString());\n\n      board[r][c] = random;\n      cell.innerText = random;\n      cell.classList.add(`field-cell--${random}`);\n      found = true;\n    };\n  }\n}\n\nfunction showMessage(type) {\n  const message = document.querySelector(`.message-${type}`);\n\n  message.classList.remove('hidden');\n  window.removeEventListener('keydown', start);\n}\n\nfunction clearZeros(row) {\n  return row.filter(element => element !== 0);\n}\n\nfunction addZeros(row) {\n  const newRow = row;\n\n  while (newRow.length < boardSize) {\n    newRow.push(0);\n  }\n\n  return newRow;\n}\n\nfunction slide(direction) {\n  direction === DIRECTIONS.right\n  || direction === DIRECTIONS.left\n    ? slideHorizontally(direction)\n    : slideVertically(direction);\n\n  if (findNumber(2048)) {\n    showMessage('win');\n\n    return;\n  }\n\n  if (!findNumber() && !canMove()) {\n    showMessage('lose');\n\n    return;\n  }\n\n  addNewNumber();\n}\n\nfunction slideHorizontally(direction) {\n  for (let r = 0; r < boardSize; r++) {\n    let row = board[r];\n\n    if (direction === DIRECTIONS.right) {\n      row.reverse();\n    }\n\n    row = merge(row);\n\n    if (direction === DIRECTIONS.right) {\n      row.reverse();\n    }\n\n    board[r] = row;\n\n    for (let c = 0; c < boardSize; c++) {\n      const cell = document.getElementById(r.toString() + '-' + c.toString());\n      const cellNumber = board[r][c];\n\n      updateCell(cell, cellNumber);\n    }\n  }\n}\n\nfunction slideVertically(direction) {\n  for (let c = 0; c < boardSize; c++) {\n    let row = [board[0][c], board[1][c], board[2][c], board[3][c]];\n\n    if (direction === DIRECTIONS.down) {\n      row.reverse();\n    }\n\n    row = merge(row);\n\n    if (direction === DIRECTIONS.down) {\n      row.reverse();\n    }\n\n    for (let r = 0; r < boardSize; r++) {\n      board[r][c] = row[r];\n\n      const cell = document.getElementById(r.toString() + '-' + c.toString());\n      const cellNumber = board[r][c];\n\n      updateCell(cell, cellNumber);\n    }\n  }\n}\n"]}